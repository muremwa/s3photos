{"version":3,"sources":["pages/utils.js","pages/TopBar.js","dispatcher/dispatcher.js","store/PhotosStore.js","actions/ajaxWrapper.js","pages/Home.js","actions/actions.js","pages/Upload.js","pages/Error404.js","App.js","reportWebVitals.js","index.js"],"names":["searchQ","s","s_","replace","Map","split","map","s__","TopBar","props","history","useHistory","location","useLocation","useState","q","qChanger","navId","useEffect","pq","search","has","get","nav","document","getElementById","scrollIntoView","Navbar","bg","variant","expand","id","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Item","to","exact","Form","inline","onSubmit","event_","preventDefault","term","target","children","value","push","Control","name","type","defaultValue","placeholder","required","Button","Dispatcher","postStore","posts","likedPosts","loaded","cases","HUNGARIAN_NOTATION","NORMAL_CASE","CAMEL_CASE","SNAKE_CASE","toChange","currentCase","changeTo","some","arg","undefined","Error","toUpperCase","temp","result","this","filter","Boolean","char","substring","toLowerCase","join","index","postId","post","find","likes","liked","includes","cleanPost_","cKeys","Object","keys","key","caseChanger","values","forEach","i","action","payload","Array","isArray","cleanPost","emit","status","EventEmitter","dispatcher","register","handleActions","bind","ajax","requestType","crossSiteHeader","xhr","XMLHttpRequest","__superRequest__","options","headers","sendCookies","withCredentials","length","crosssite","header","setRequestHeader","responseType","onerror","error","onload","event","parseInt","toString","success","statusText","response","params","url","URL","TypeError","param","searchParams","set","open","downloadprogress","onprogress","lengthComputable","total","send","_get_request_","data","form","_data","jsonHeader","FormData","uploadstart","upload","onloadstart","uploadend","uploaderror","uploadprogress","_post_request_","NoPostsAvailable","reloader","from","onClick","PostLike","likingUrl","line","likeStatus","statusUpdater","_likes","likesUpdater","likeBtnId","afterLike","store","getPostLikes","on","removeListener","_url","endOfLike","likeOptions","payload_","responseKeys","dispatch","likePost","token","src","icons","heartFull","heart","alt","btn","click","hidden","Post","time","caption","imageFile","cleanTime","uploadedBy","Card","user","clock","Home","rPosts","postsUpdate","fetchPosts","fetchPostsChanger","errorLoadingPosts","errorUpdate","post_","searchs","query","end","loadOptions","loadPostsUrl","loadPosts","loadNewPosts","title","FieldError","Alert","classNameExtra","message","FileField","me","alertId","imgDivId","imgId","Group","Label","File","accept","onChange","img","imgDiv","alert","reader","FileReader","e","readAsDataURL","files","style","display","YourNameField","help","x_name","dValue","errorId","CaptionField","as","rows","MainError","unexpected","reload","UploadForm","searches","mainErrorId","uploaderNameField","file","your_name","errors","errorsUpdate","errorsPresent","onFormError","endOfUpload","onSuccessUpload","uploadProgress","pc","errorMaster","errorPaint","errorDiv","method","encType","uploading","onSuccess","uploadOptions","uploadPostUrl","cleanErrors","uploadPost","NoConnection","connection","Upload","connectedReq","connectedReqChanger","connectionChanger","successCallBack","errorCallBack","uploadConnection","Error404","console","log","class","App","loadLine","kill","width","basename","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","root","dataset","userIcon","timeIcon","heartIcon","heartFullIcon","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.64faccb0.chunk.js","sourcesContent":["export function searchQ (s = '') {\r\n    const s_ = s.replace(/\\?/g, '');\r\n    return new Map(s_.split('&').map((s__) => s__.split('=')));\r\n}","import { useEffect, useState } from 'react';\r\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nimport { searchQ } from './utils';\r\n\r\nimport '../style/topBar.css';\r\n\r\nexport default function TopBar (props) {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const [ q, qChanger ] = useState('');\r\n    const navId = 'top-nav';\r\n\r\n    const handleSearch = (event_) => {\r\n        event_.preventDefault();\r\n        const term = event_.target.children.search.value;\r\n        history.push(`/?post-query=${term}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const pq = searchQ(location.search);\r\n        if (pq.has('post-query')) {\r\n            qChanger(pq.get('post-query'))\r\n        };\r\n        const nav = document.getElementById(navId);\r\n        nav? nav.scrollIntoView(): void 0;\r\n    }, [location])\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\" id={navId}>\r\n            <Navbar.Brand href=\"/\">S3photos</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Item>\r\n                        <NavLink className=\"nav-link\" to={'/'} exact>Home</NavLink>\r\n                    </Nav.Item>\r\n\r\n                    <Nav.Item>\r\n                        <NavLink className=\"nav-link\" to={'/upload/'} exact>Upload</NavLink>\r\n                    </Nav.Item>                    \r\n                </Nav>\r\n                <Form inline onSubmit={handleSearch}>\r\n                    <Form.Control name=\"search\" type=\"text\" defaultValue={q} placeholder=\"Search for posts, uploader and tags\" className=\"mr-sm-2\" required/>\r\n                    <Button type=\"submit\" variant=\"outline-success\">Search</Button>\r\n                </Form>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};","import { Dispatcher } from 'flux';\r\nexport default new Dispatcher();","import { EventEmitter } from 'events';\r\nimport dispatcher from '../dispatcher/dispatcher';\r\n\r\nclass PhotoStore extends EventEmitter {\r\n    posts = []\r\n    likedPosts = []\r\n    loaded = false;\r\n    cases = {\r\n        HUNGARIAN_NOTATION: 'HN',\r\n        NORMAL_CASE: 'NC',\r\n        CAMEL_CASE: 'CC',\r\n        SNAKE_CASE: 'SC',\r\n    };\r\n\r\n        \r\n    /**\r\n     * @param {string} toChange\r\n     * @param {cases} currentCase\r\n     * @param {cases} changeTo\r\n     * @returns {string} Returns an string in the new case type\r\n    */\r\n    caseChanger (toChange, currentCase, changeTo) {\r\n        if ([toChange, currentCase, changeTo].some((arg) => arg === undefined)) {\r\n            throw new Error('Missing arguments');\r\n        };\r\n\r\n        if ([toChange, currentCase, changeTo].some((arg) => (typeof arg) !== 'string')) {\r\n            throw new Error('Wrong argument type');\r\n        };\r\n\r\n        currentCase = currentCase.toUpperCase();\r\n        changeTo = changeTo.toUpperCase();\r\n\r\n        if (currentCase === changeTo) {\r\n            return toChange;\r\n        }\r\n\r\n        let temp;\r\n        let result;\r\n\r\n        switch (currentCase) {\r\n            case this.cases.CAMEL_CASE:\r\n                temp = toChange.split(/([A-Z]{1}[a-z]*)/).filter(Boolean);\r\n                break;\r\n\r\n            case this.cases.HUNGARIAN_NOTATION:\r\n                temp = toChange.split(/([A-Z]{1}[a-z]*)/).filter(Boolean);\r\n                break;\r\n\r\n            case this.cases.SNAKE_CASE:\r\n                temp = toChange.split(\"_\");\r\n                break;\r\n\r\n            case this.cases.NORMAL_CASE:\r\n                temp = toChange.split(/\\s/);\r\n                break;\r\n        \r\n            default:\r\n                throw new Error(`Converting from '${currentCase}' not supported`);\r\n        };\r\n\r\n\r\n        switch (changeTo) {\r\n            case this.cases.CAMEL_CASE:\r\n                result = temp.map((char) => `${char[0].toUpperCase()}${char.substring(1).toLowerCase()}`).join('');\r\n                break;\r\n\r\n            case this.cases.HUNGARIAN_NOTATION:\r\n                result = temp.map((char, index) => {\r\n                    char = char.toLowerCase();\r\n                    if (index > 0) {\r\n                        char = `${char[0].toUpperCase()}${char.substring(1).toLowerCase()}`;\r\n                    };\r\n\r\n                    return char\r\n                }).join('');\r\n                break;\r\n\r\n            case this.cases.SNAKE_CASE:\r\n                result = temp.map((char) => char.toLowerCase()).join('_');\r\n                break;\r\n\r\n            case this.cases.NORMAL_CASE:\r\n                result = temp.map((char) => char.toLowerCase()).join(' ');\r\n                break;\r\n\r\n            default:\r\n                throw new Error(`Converting to '${changeTo}' not supported`);\r\n        };\r\n\r\n        return result;\r\n    };\r\n\r\n    getPostLikes (postId) {\r\n        const post = this.posts.find((post) => post.id === postId);\r\n        return post? {\r\n            likes: post.likes,\r\n            liked: post.liked\r\n        }: null;\r\n    };\r\n\r\n    cleanPost (post = {}) {\r\n        const liked = this.likedPosts.includes(post.id);\r\n        const cleanPost_ = { liked }\r\n        const cKeys = Object.keys(post).map((key) => this.caseChanger(key, this.cases.SNAKE_CASE, this.cases.HUNGARIAN_NOTATION));\r\n\r\n        Object.values(post).forEach((value, i) => {\r\n            cleanPost_[cKeys[i]] = value;\r\n        });\r\n\r\n        return cleanPost_\r\n    };\r\n\r\n    handleActions (action) {\r\n        switch (action.type) {\r\n            case 'LOADED_POSTS':\r\n                this.likedPosts = action.payload.liked;\r\n                this.posts = Array.isArray(action.payload.posts)? action.payload.posts.map((post) => this.cleanPost(post)): [];\r\n                this.loaded = true;\r\n                this.emit('change');\r\n                break;\r\n\r\n            case 'LIKED_POST':\r\n                const post = this.posts.find((post) => post.id === action.payload.postId);\r\n                \r\n                if (post) {\r\n                    post.likes = action.payload.likes > -1? action.payload.likes: post.likes;\r\n                    post.liked = action.payload.status;\r\n                };\r\n                this.emit(`change_to_post_${action.payload.postId}`);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    };\r\n};\r\n\r\n\r\nconst postStore = new PhotoStore();\r\ndispatcher.register(postStore.handleActions.bind(postStore));\r\nexport default postStore;","/* \r\nMIT License\r\n\r\nCopyright (c) 2020 daniel muremwa\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\nVisit: https://github.com/muremwa/ajax-wrapper\r\n\r\n*/\r\n\r\nconst ajax = () => {\r\n    const requestType = {\r\n        POST: 'POST',\r\n        GET: 'GET'\r\n    };\r\n    const crossSiteHeader = {\r\n        name: 'Access-Control-Allow-Origin',\r\n        value: '*'\r\n    };\r\n    const flat200 = (status) => {\r\n        return parseInt(status.toString().replace(/\\B\\d/g, '0'));\r\n    };\r\n    const xhr = new XMLHttpRequest();\r\n    const addHeaders = (headers, cross) => {\r\n        cross ? headers.push(crossSiteHeader) : void 0;\r\n        headers.forEach((header) => {\r\n            xhr.setRequestHeader(header.name, header.value);\r\n        });\r\n    };\r\n    function __superRequest__(options) {\r\n        // cookies?\r\n        options.sendCookies === true ? xhr.withCredentials = true : void 0;\r\n        // add headers if any\r\n        options.headers && options.headers.length > 0 ? addHeaders(options.headers, options.crosssite) : void 0;\r\n        // set response type\r\n        xhr.responseType = options.responseType;\r\n        // error handler\r\n        xhr.onerror = options.error;\r\n        // request complete\r\n        xhr.onload = (event) => {\r\n            if (flat200(xhr.status) === 200) {\r\n                options.success({\r\n                    status: xhr.status,\r\n                    statusText: xhr.statusText,\r\n                    response: xhr.response\r\n                });\r\n            }\r\n            else {\r\n                options.error(event);\r\n            }\r\n            ;\r\n        };\r\n    }\r\n    ;\r\n    /*\r\n        send a get request\r\n    */\r\n    function _get_request_(options) {\r\n        // add search params if any\r\n        if (options.params) {\r\n            if (typeof options.url === 'string') {\r\n                options.url = new URL(options.url);\r\n            }\r\n            ;\r\n            if (!('searchParams' in options.url)) {\r\n                throw TypeError('The url passed is incorrect');\r\n            }\r\n            ;\r\n            options.params.forEach((param) => {\r\n                options.url.searchParams.set(param.name, param.value);\r\n            });\r\n        }\r\n        ;\r\n        xhr.open(requestType.GET, options.url);\r\n        // download progress\r\n        if (options.downloadprogress) {\r\n            xhr.onprogress = (event) => {\r\n                if (event.lengthComputable) {\r\n                    options.downloadprogress(event.lengthComputable, event.loaded, event.total);\r\n                }\r\n                else {\r\n                    options.downloadprogress(event.lengthComputable, event.loaded);\r\n                }\r\n                ;\r\n            };\r\n        }\r\n        ;\r\n        // call generic options\r\n        __superRequest__(options);\r\n        // send request bro\r\n        xhr.send();\r\n    }\r\n    ;\r\n    /*\r\n        send A post request\r\n    */\r\n    function _post_request_(options) {\r\n        if (options.data && options.form) {\r\n            throw new Error('Both data and form are currently not supported');\r\n        }\r\n        ;\r\n        // open the request\r\n        xhr.open(requestType.POST, options.url);\r\n        // data to be sent to back end?\r\n        let _data = '';\r\n        if (options.data) {\r\n            const jsonHeader = {\r\n                name: 'Content-Type',\r\n                value: 'application/json; charset=utf-8'\r\n            };\r\n            options.headers ? options.headers.push(jsonHeader) : options.headers = [jsonHeader,];\r\n            _data = options.data;\r\n        }\r\n        else if (options.form) {\r\n            _data = new FormData(options.form);\r\n        };\r\n        // call generic options\r\n        __superRequest__(options);\r\n        // upload progress start?\r\n        options.uploadstart ? xhr.upload.onloadstart = options.uploadstart : void 0;\r\n        // upload done?\r\n        options.uploadend ? xhr.upload.onload = options.uploadend : void 0;\r\n        // upload progress error?\r\n        options.uploaderror ? xhr.upload.onerror = options.uploaderror : void 0;\r\n        // upload progress?\r\n        options.uploadprogress ? xhr.upload.onprogress = (event) => {\r\n            options.uploadprogress(event.loaded, event.total);\r\n        } : void 0;\r\n        // send request\r\n        xhr.send(_data);\r\n    }\r\n    ;\r\n    return {\r\n        get: (options) => _get_request_(options),\r\n        post: (options) => _post_request_(options),\r\n    };\r\n};\r\n\r\nexport default ajax();","import { useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nimport store from '../store/PhotosStore';\r\nimport { loadPosts, likePost } from '../actions/actions';\r\nimport { searchQ } from './utils';\r\nimport { token, icons } from '../index';\r\n\r\nimport '../style/Home.css';\r\n\r\n\r\nfunction NoPostsAvailable (props) {\r\n    const { error, reloader } = props\r\n    return (\r\n        <div className=\"container\" id=\"no-posts\">\r\n            <div className=\"text-center\">\r\n                <h2>No posts availble at this moment {props.from? `from ${props.from}`: void 0}</h2>\r\n                <NavLink to={`${props.from? `/upload/?as=${props.from}`: '/upload/'}`} className=\"btn btn-dark upload-btn\" exact>Upload to <span className=\"s3\">S3photos</span> {props.from? `as ${props.from}`: void 0}</NavLink>\r\n            </div>\r\n            <br />\r\n            <div className=\"text-center\">\r\n                <Button onClick={reloader} variant={error? \"danger\": \"dark\"}>{error? 'An error occured ': ''}Click to reload</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction PostLike (props) {\r\n    const { likes, likingUrl, liked, id, line } = props;\r\n    const [ likeStatus, statusUpdater ] = useState(liked);\r\n    const [ _likes, likesUpdater ] = useState(likes);\r\n    const likeBtnId = `like-btn-${id}`;\r\n\r\n    const submitLikeForm = () => {\r\n        const btn = document.getElementById(likeBtnId);\r\n        btn? btn.click(): void 0;\r\n    };\r\n\r\n    const afterLike = () => {\r\n        const _data = store.getPostLikes(id);\r\n        if (_data !== null) {\r\n            statusUpdater(_data.liked);\r\n            likesUpdater(_data.likes);\r\n        };\r\n    };\r\n\r\n    const handleLikeClick = (event_) => {\r\n        event_.preventDefault();\r\n        line(97, false);\r\n        likePost(likingUrl, event_.target, id, () => line(0, true));\r\n    };\r\n    \r\n    useEffect(() => {\r\n        store.on(`change_to_post_${id}`, afterLike);\r\n        return () => store.removeListener(`change_to_post_${id}`, afterLike);\r\n    });\r\n\r\n    return (\r\n        <form className=\"like\" onSubmit={handleLikeClick}>\r\n            <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={token}/>\r\n            <img type=\"image\" src={likeStatus? icons.heartFull: icons.heart} alt=\"like vector\" className=\"vector liking\" onClick={submitLikeForm} />\r\n            <input type=\"submit\" hidden id={likeBtnId} />\r\n            <span className=\"h-m-l\" name='count'> {_likes}</span>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nfunction Post (props) {\r\n    const { caption, imageFile, likes, likingUrl, cleanTime, uploadedBy, id, liked, line } = props;\r\n\r\n    const _cleanTime = (time) => {\r\n        return time.replace(/\\s0/g, ' ').replace(/AM/, 'a.m.').replace(/PM/, 'p.m.');\r\n    };\r\n\r\n    return (\r\n        <Card className=\"post\" id={`post-${id}`}>\r\n            <img src={imageFile} alt={`Post by ${uploadedBy}`}/>\r\n            <div className=\"post-info\">\r\n                <div className=\"info-post\">\r\n                    <div className=\"uploader\">\r\n                        <span className=\"uploader-info\">\r\n                            <img className=\"user-vector vector\" src={icons.user} alt=\"user-vector\" />\r\n                            <NavLink to={`/?post-query=${uploadedBy}`} className=\"uploader-name\">{uploadedBy}</NavLink>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"date\">\r\n                        <img src={icons.clock} alt=\"clock-vector\" className=\"clock-vector vector\" />\r\n                        <span className=\"posted-time\">{_cleanTime(cleanTime)}</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"caption\">\r\n                    <p>{caption}</p>\r\n                </div>\r\n\r\n                <PostLike {...{likes, likingUrl, id, liked, line }} />\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default function Home (props) {\r\n    const { line } = props;\r\n    const location = useLocation();\r\n    const [ rPosts, postsUpdate ] = useState(store.posts);\r\n    const [ fetchPosts, fetchPostsChanger ] = useState(true);\r\n    const [ errorLoadingPosts, errorUpdate ] = useState(false);\r\n    const posts = rPosts.map((post_, i) => <Post key={`${post_.id}-${i}`} {...post_} {...{line}}/>)\r\n    const searchs = searchQ(props.location.search);\r\n\r\n    const stopLoading = (error = false) => {\r\n        line(0, true);\r\n        error? errorUpdate(true): void 0;\r\n    }\r\n\r\n    if (fetchPosts) {\r\n        line(95, false);\r\n        loadPosts(searchs.has('post-query')? searchs.get('post-query'): null, stopLoading);\r\n        fetchPostsChanger(false);\r\n    };\r\n\r\n    const loadNewPosts = () => {\r\n        postsUpdate(store.posts);\r\n    };\r\n\r\n    const reloadPosts = () => fetchPostsChanger(true);\r\n\r\n    useEffect(() => {\r\n        fetchPostsChanger(true);\r\n    }, [location])\r\n\r\n    useEffect(() => {\r\n        store.on('change', loadNewPosts);\r\n        return () => store.removeListener('change', loadNewPosts);\r\n    });\r\n\r\n    document.title = \"S3photos | all posts\"\r\n\r\n    return (\r\n        <div className=\"every\">\r\n            {posts.length > 0? posts: <NoPostsAvailable from={searchs.has('post-query')? searchs.get('post-query'): null} error={errorLoadingPosts} reloader={reloadPosts} />}\r\n        </div>\r\n    );\r\n};","import dispatcher from '../dispatcher/dispatcher';\r\nimport ajax from './ajaxWrapper';\r\nimport { loadPostsUrl, uploadPostUrl } from '../index';\r\n\r\nexport function loadPosts (query, end = () => {}) {\r\n    const url_ = query? `${loadPostsUrl}?post-query=${query}`: loadPostsUrl;\r\n\r\n    const loadOptions = {\r\n        url: url_,\r\n        responseType: 'json',\r\n        error: () => end(true),\r\n        success: (payload_) => {\r\n            if (payload_.response) {\r\n                dispatcher.dispatch ({\r\n                    type: 'LOADED_POSTS',\r\n                    payload: {\r\n                        posts: payload_.response.posts,\r\n                        liked: payload_.response.liked\r\n                    }\r\n                });\r\n            };\r\n            end(false);\r\n        }\r\n    };\r\n\r\n    ajax.get(loadOptions);\r\n};\r\n\r\n\r\n// check upload options\r\nexport function uploadConnection (end = () => {}, successCallBack = () => {}, errorCallBack = () => {}) {\r\n    const uploadOptions = {\r\n        url: uploadPostUrl,\r\n        responseType: 'json',\r\n        error: () => {\r\n            errorCallBack();\r\n            end();\r\n        },\r\n        success: () => {\r\n            successCallBack();\r\n            end();\r\n        }\r\n    }\r\n\r\n    ajax.get(uploadOptions);\r\n};\r\n\r\n\r\n// upload a post\r\nexport function uploadPost (form, uploading = () => {}, onSuccess = () => {}, end = () => {}, error = () => {}) {\r\n    const uploadOptions = {\r\n        url: uploadPostUrl,\r\n        responseType: 'json',\r\n        form: form,\r\n        error: () => {\r\n            error({'unexpected': true});\r\n            end();\r\n        },\r\n        success: (payload_) => {\r\n            const response = payload_.response;\r\n            if (response.success) {\r\n                onSuccess();\r\n            } else {\r\n                const cleanErrors = {}\r\n                Object.keys(response.errors).forEach((key) => cleanErrors[key] = response.errors[key][0])\r\n                error(cleanErrors);\r\n                end();\r\n            };\r\n        },\r\n        uploadprogress: (loaded, total) => {\r\n            const pc = (loaded/total) * 100;\r\n            uploading(pc);\r\n        },\r\n    };\r\n\r\n    ajax.post(uploadOptions);\r\n};\r\n\r\n// like a post\r\nexport function likePost (_url, form, postId, endOfLike) {\r\n    const likeOptions = {\r\n        url: _url,\r\n        responseType: 'json',\r\n        form: form,\r\n        error: endOfLike,\r\n        success: (payload_) => {\r\n            const response = payload_.response;\r\n            const responseKeys = Object.keys(response);\r\n\r\n            dispatcher.dispatch ({\r\n                type: 'LIKED_POST',\r\n                payload: {\r\n                    postId,\r\n                    status: responseKeys.includes('liked')? response.liked: false,\r\n                    likes: responseKeys.includes('likes')? response.likes: -1 \r\n                }\r\n            });\r\n            endOfLike();\r\n        }\r\n    };\r\n\r\n    ajax.post(likeOptions);\r\n};\r\n","import { useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { uploadPost, uploadConnection } from '../actions/actions';\r\nimport { searchQ } from './utils';\r\nimport { token } from '../index';\r\n\r\nimport '../style/Upload.css';\r\n\r\n\r\nfunction FieldError (props) {\r\n    return (\r\n        <Alert id={props.id? props.id: ''} className={props.classNameExtra? props.classNameExtra: ''} variant=\"warning\">{props.message}</Alert>\r\n    );\r\n};\r\n\r\nfunction FileField (props) {\r\n    const { error, me } = props;\r\n    const alertId = 'file-alert';\r\n    const imgDivId = 'image-to-upload'\r\n    const imgId = 'image-to-call'\r\n\r\n    const handleFileSelect = (event_) => {\r\n        const img = document.getElementById(imgId);\r\n        const imgDiv = document.getElementById(imgDivId);\r\n        const alert = document.getElementById(alertId);\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n            img.src = e.target.result;\r\n        };\r\n\r\n        reader.readAsDataURL(event_.target.files[0]);\r\n        imgDiv? imgDiv.style.display = 'block': void 0;\r\n        alert? alert.style.display = 'none': void 0;\r\n    };\r\n\r\n    me === null? void 0: me(alertId);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"img-to-up\" id={imgDivId}>\r\n                <h6 className=\"text-center\">You are about to upload the image below</h6>\r\n                <img id={imgId} src=\"\" alt=\"To be uploaded\" />\r\n            </div>\r\n\r\n            {error? <FieldError id={alertId} message={error} />: <Alert id={alertId} variant='info'>Choose an image</Alert>}\r\n\r\n            <Form.Group>\r\n                <Form.Label>File</Form.Label>\r\n                <Form.File name='file' accept='image/*' className=\"form-control\" onChange={handleFileSelect} required />\r\n            </Form.Group>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nfunction YourNameField (props) {\r\n    const { error, name, help, x_name, dValue, me } = props;\r\n    const errorId = 'your-name-error';\r\n\r\n    me === null? void 0: me(errorId);\r\n\r\n    return (\r\n        <div>\r\n            {error? <FieldError message={error} id={errorId} />: <Alert variant='info'>{help}</Alert>}\r\n\r\n            <Form.Group>\r\n                <Form.Label>{x_name}</Form.Label>\r\n                <Form.Control defaultValue={dValue} name={name} required/>\r\n            </Form.Group>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nfunction CaptionField (props) {\r\n    const { error, name, help, x_name, dValue, me } = props;\r\n    const errorId = 'caption-error-id';\r\n\r\n    me === null? void 0: me(errorId);\r\n\r\n    return (\r\n        <div>\r\n            {error? <FieldError id={errorId} message={error} />: <Alert variant='info'>{help}</Alert>}\r\n\r\n            <Form.Group>\r\n                <Form.Label>{x_name}</Form.Label>\r\n                <Form.Control defaultValue={dValue} as='textarea' rows=\"10\" name={name} required />\r\n            </Form.Group>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nfunction MainError (props) {\r\n    props.me? props.me(props.id): void 0;\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <FieldError id={props.id} classNameExtra='text-center error' message={props.unexpected? 'An unexpected error occurred': 'Please correct the errors below'} />\r\n            {props.unexpected? <Button onClick={props.reload} variant='dark'>Refresh to try again</Button>: null}\r\n        </div>\r\n    );\r\n};\r\n\r\nfunction UploadForm (props) {\r\n    const searches = searchQ(props.location.search);\r\n    const { line, reload } = props;\r\n    const mainErrorId = 'main-error-id';\r\n\r\n    const captionField = {\r\n        dValue: '',\r\n        x_name: 'Caption',\r\n        name: 'caption',\r\n        help: 'Tell others what the image is about',\r\n    };\r\n\r\n    const uploaderNameField = {\r\n        dValue: searches.has('as')? searches.get('as'): '',\r\n        x_name: 'Your name',\r\n        name: 'your_name',\r\n        help: 'Enter a name you would like to be known as',\r\n    }\r\n\r\n    const [ errors, errorsUpdate ] = useState({\r\n        file: null,\r\n        caption: null,\r\n        your_name: null,\r\n        unexpected: false\r\n    });\r\n\r\n    const errorsPresent = Object.values(errors).some((error) => Boolean(error));\r\n\r\n    const onFormError = (errors = {}) => errorsUpdate(errors);\r\n\r\n    const endOfUpload = () => line(0, true);\r\n\r\n    const onSuccessUpload = (id) => props.history.push('/');\r\n\r\n    const uploadProgress = (pc) => line(pc, false);\r\n\r\n    const handleFormSubmit = (event_) => {\r\n        event_.preventDefault();\r\n        uploadPost(event_.target, uploadProgress, onSuccessUpload, endOfUpload, onFormError)\r\n    };\r\n\r\n    const errorMaster = (() => {\r\n        if (errors.unexpected) {\r\n            return 0;\r\n        } else if (errors.file) {\r\n            return 1;\r\n        } else if (errors.caption) {\r\n            return 2;\r\n        } else if (errors.your_name) {\r\n            return 3;\r\n        } else {\r\n            return null;\r\n        };\r\n    })();\r\n\r\n    const errorPaint = (id) => {\r\n        const errorDiv = document.getElementById(id);\r\n        errorDiv? errorDiv.scrollIntoView(): void 0;\r\n    };\r\n\r\n    errorMaster === 0? errorPaint(mainErrorId): void 0;\r\n\r\n    return (\r\n        <div className=\"cloud\">\r\n            <form method=\"POST\" id=\"form-upload\" encType=\"multipart/form-data\" onSubmit={handleFormSubmit}>\r\n                <legend className=\"text-center legend-form\">Upload an image to <span className=\"s3\">S3photos</span>{searches.has('as')? ` as ${searches.get('as')}`: void 0}</legend>\r\n                <input type=\"hidden\" value={token} name=\"csrfmiddlewaretoken\"/>\r\n                {errorsPresent? <MainError id={mainErrorId} unexpected={errors.unexpected} me={errorMaster === 0? errorPaint: null} {...{reload}} />: void 0}\r\n                <FileField error={errors.file} me={errorMaster === 1? errorPaint: null} />\r\n                <hr />\r\n                <CaptionField {...captionField} error={errors.caption} me={errorMaster === 2? errorPaint: null}/>\r\n                <hr />\r\n                <YourNameField {...uploaderNameField} error={errors.your_name} me={errorMaster === 3? errorPaint: null}/>\r\n                <hr />\r\n                <Button type=\"submit\" variant=\"dark\">Upload to <span className=\"s3\">S3photos</span></Button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction NoConnection (props) {\r\n    const { connection } = props;\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <h1>{connection? '': 'No Connection available'}</h1>\r\n            {!connection? <Button onClick={props.reload}>Click to retry</Button>: null}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default function Upload (props) {\r\n    const [ connectedReq, connectedReqChanger ] = useState(false);\r\n    const [ connection, connectionChanger ] = useState(true);\r\n\r\n    const doneLoading = () => props.line(0, true);\r\n\r\n    const success = () => {\r\n        connectedReqChanger(true);\r\n        connectionChanger(true);\r\n    };\r\n\r\n    const error = () => {\r\n        connectedReqChanger(true);\r\n        connectionChanger(false);\r\n    }\r\n\r\n    const reload = () => connectedReqChanger(false);\r\n\r\n    if (!connectedReq) {\r\n        props.line(98, false);\r\n        uploadConnection(doneLoading, success, error);\r\n    };\r\n\r\n    const show = () => {\r\n        if (connectedReq) {\r\n            return connection? <UploadForm {...props} {...{reload}} />: <NoConnection connection={false} {...{reload}}/>\r\n        } else {\r\n            return <NoConnection connection={true} />\r\n        };\r\n    };\r\n    document.title = \"S3photos | upload\"\r\n\r\n    return show();\r\n};","import { NavLink } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404 (props) {\r\n    console.log(props)\r\n    return (\r\n        <div id=\"main\" class=\"text-center\">\r\n            <h1>404 error</h1>\r\n            <h2>the page you requested does not exist</h2>\r\n            <NavLink className=\"btn btn-dark\" to='/'>Home</NavLink>\r\n        </div>\r\n    );\r\n};","import { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nimport './style/bootstrap.min.css';\nimport './style/App.css';\n\nimport TopBar from './pages/TopBar';\nimport Home from './pages/Home';\nimport Upload from './pages/Upload';\nimport Error404 from './pages/Error404';\n\n\nfunction App() {\n\tconst loadLine = (pc = 0, kill = false) => {\n\t\tconst line = document.getElementById(\"line-load\");\n\t\tif (kill) {\n\t\t\tline? line.style.width = '0%': void 0;\n\t\t} else {\n\t\t\tif (pc < 101 && pc > -1) {\n\t\t\t\tline? line.style.width = `${pc}%`: void 0;\n\t\t\t}\n\t\t};\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<BrowserRouter basename='/open/'>\n\t\t\t\t<TopBar />\n\t\t\t\t<div id=\"load-line\">\n\t\t\t\t\t<div id=\"line-load\"></div>\n\t\t\t\t</div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/' exact render={(props) => <Home {...props} line={loadLine} />} />\n\t\t\t\t\t<Route path='/upload/' exact render={(props) => <Upload {...props} line={loadLine} />} />\n\t\t\t\t\t<Route component={Error404} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = document.getElementById('root');\n\n\n\nexport const loadPostsUrl = root.dataset.loadPosts;\nexport const uploadPostUrl = root.dataset.uploadPost;\nexport const token = root.dataset.token;\nexport const icons = {\n    user: root.dataset.userIcon,\n    clock: root.dataset.timeIcon,\n    heart: root.dataset.heartIcon,\n    heartFull: root.dataset.heartFullIcon\n};\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>, root);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}